#version: '3.8'

services:
  go-user-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-user-api
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      - TZ=Asia/Bangkok
      - APP_NAME=user-api
      - APP_ENV=development
      - SERVER_PORT=8080
      - GRPC_PORT=50051
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=user-api
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL_MODE=disable
      - JWT_SECRET=your-super-secret-key-here
      - JWT_EXPIRE_MINUTES=60
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - REDIS_CACHE_TTL=3600
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - redis
      - jaeger
    restart: unless-stopped
    networks:
      - app-network
    # เอาบรรทัดนี้ออกเพราะอาจทำให้เกิดปัญหา
    # volumes:
    #   - ./:/app

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - TZ=Asia/Bangkok
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user-api
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  mongodb:
    image: mongo:8
    container_name: mongodb
    environment:
      - TZ=Asia/Bangkok
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.40
    container_name: jaeger
    ports:
      - "16686:16686" # UI
      - "14268:14268" # Collector HTTP
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - app-network
    restart: unless-stopped

  # Adminer for database management
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8081:8080"
    networks:
      - app-network
    restart: unless-stopped
  # Mongo Express for MongoDB management

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_MONGODB_URL=mongodb://admin:admin@mongo:27017/
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:

networks:
  app-network:
    driver: bridge